<<<<<<< HEAD
<?php

namespace app\models;

use Yii;

/**
 * This is the model class for table "j17_trancamentos".
 * Most of the methods contained in this class were self-generated by the Framework
 * 
 * @author Pedro Frota <pvmf@icomp.ufam.edu.br>
 *
 * @property integer $id
 * @property integer $idAluno
 * @property string $dataSolicitacao
 * @property string $dataAprovOrientador
 * @property string $dataInicio
 * @property string $prevTermino
 * @property string $dataTermino
 * @property string $justificativa
 * @property string $documento
 * @property integer $status
 *
 * @property Aluno $aluno
 */
class Trancamento extends \yii\db\ActiveRecord
{
    public $documento0;

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'j17_trancamentos';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['idAluno', 'dataSolicitacao', /*'dataAprovOrientador',*/ 'dataInicio', 'prevTermino', /*'dataTermino',*/ 'justificativa', 'documento' /*, 'status'*/], 'required'],
            [['idAluno', 'status'], 'integer'],
            [['dataSolicitacao', 'dataAprovOrientador', 'dataInicio', 'prevTermino', 'dataTermino'], 'safe'],
            [['documento'], 'string'],
            [['documento0'], 'file', 'extensions' => 'pdf'],
            [['justificativa'], 'string', 'max' => 250],
            [['idAluno'], 'exist', 'skipOnError' => true, 'targetClass' => Aluno::className(), 'targetAttribute' => ['idAluno' => 'id']],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'idAluno' => 'Aluno',
            'dataSolicitacao' => 'Data Solicitação',
            'dataAprovOrientador' => 'Data Aprov. Orientador',
            'dataInicio' => 'Início',
            'prevTermino' => 'Quantidade de dias',
            'dataTermino' => 'Data Término',
            'justificativa' => 'Justificativa',
            'documento' => 'Documento',
            'status' => 'Status',
        ];
    }

    /**
     * Gets the student ID
     * 
     * @author Pedro Frota <pvmf@icomp.ufam.edu.br>
     */
    public function getAluno()
    {
        return $this->hasOne(Aluno::className(), ['id' => 'idAluno']);
    }

    /**
     * Gets the student advisor ID
     * 
     * @author Pedro Frota <pvmf@icomp.ufam.edu.br>
     */
    public function getOrientador() {
        return $this->aluno->orientador1;
    }
}
=======
<?php

namespace app\models;

use Yii;


class Trancamento extends \yii\db\ActiveRecord
{

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'j17_trancamentos';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {

        return [
			[['idAluno', 'idOrientador', 'dataSolicitacao', 'dataInicio', 'prevTermino', 'justificativa'], 'required'],
            [['dataTermino', 'documento'], 'safe'],
			[['documento'], 'file', 'extensions' => 'pdf'] ,
			[['justificativa'], 'string'],
			[['prevTermino'], 'validarDataRetorno']
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'idAluno' => 'Aluno',
			'idOrientador' => 'Orientador',
            'dataInicio' => 'Data de Início',
            'dataTermino' => 'Data de Retorno',
            'dataTermino' => 'Previsão de Retorno',
            'justificativa' => 'Justificativa',
            'documento' => 'Documento'
        ];
    }
	
    public function validarDataRetorno($attribute, $params){
        if (!$this->hasErrors()) {
            if (date("Y-m-d", strtotime($this->prevTermino)) < date("Y-m-d", strtotime($this->dataInicio))) {
                $this->addError($attribute, 'Informe uma data igual ou posterior a '.date("d-m-Y", strtotime($this->prevTermino)));
            }
        }
    }
	
	public function beforeSave(){
        $this->dataInicio = date('Y-m-d', strtotime($this->dataInicio));
        $this->dataTermino =  date('Y-m-d', strtotime($this->dataTermino));
		$this->prevTermino =  date('Y-m-d', strtotime($this->prevTermino));

        return true;
    }	
	
	public function upload($idAluno)
    {
        if ($this->validate()) {
			$nomeArquivo = 'uploads/trancamento-' . $idAluno . '-' . date("y-m-d").'.'.$this->documento->extension;
            $this->lattesFile->saveAs($nomeArquivo);
        } else {
            return false;
        }
		return true;
    }

}
>>>>>>> f087f7b8ffac37b41ce76ed3c9f50df435797f80
